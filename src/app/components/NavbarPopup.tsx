import React, { useEffect, useRef, useState } from "react";
import { FaGamepad, FaRobot } from "react-icons/fa";
import { SiBlockchaindotcom } from "react-icons/si";
import Link from "next/link";

interface ServicesPopupProps {
  onClose: () => void;
}

const ServicesPopup: React.FC<ServicesPopupProps> = ({ onClose }) => {
  const popupRef = useRef<HTMLDivElement>(null);
  const [selectedService, setSelectedService] = useState<string | null>(null); // New state for selected service

  useEffect(() => {
    const handleEscape = (event: KeyboardEvent) => {
      if (event.key === "Escape") onClose();
    };

    document.addEventListener("keydown", handleEscape);
    return () => document.removeEventListener("keydown", handleEscape);
  }, [onClose]);

  const handleServiceClick = (service: string) => {
    setSelectedService(service); // Update selected service on click
  };

  return (
    <div ref={popupRef} className="bg-white shadow-lg rounded-lg p-4 w-80 z-50">
      <div className="flex flex-col gap-3">
        <Link href="/BlockChainService">
          <ServiceItem
            icon={<svg width="22" height="22" className="hidden md:block" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M19 14.4999V6.99988L12.75 3.48438M9.25 3.48438L3 6.99988V14.4999M4.5 16.8439L11 20.4999L15 18.2499L17.5 16.8439M11 7.99988L12.5 8.87488L14 9.74988V13.2499L12.5 14.1249L11 14.9999L9.5 14.1249L8 13.2499V9.74988L9.5 8.87488L11 7.99988ZM11 7.99988V4.49988M14 12.9999L17.5 14.9999M8 12.9999L4.5 14.9999" stroke="#1E1E1E" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M11 4.5C11.8284 4.5 12.5 3.82843 12.5 3C12.5 2.17157 11.8284 1.5 11 1.5C10.1716 1.5 9.5 2.17157 9.5 3C9.5 3.82843 10.1716 4.5 11 4.5Z" stroke="#1E1E1E" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M3 17.5C3.82843 17.5 4.5 16.8284 4.5 16C4.5 15.1716 3.82843 14.5 3 14.5C2.17157 14.5 1.5 15.1716 1.5 16C1.5 16.8284 2.17157 17.5 3 17.5Z" stroke="#1E1E1E" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M19 17.5C19.8284 17.5 20.5 16.8284 20.5 16C20.5 15.1716 19.8284 14.5 19 14.5C18.1716 14.5 17.5 15.1716 17.5 16C17.5 16.8284 18.1716 17.5 19 17.5Z" stroke="#1E1E1E" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
</svg>
}
            title="Blockchain Development"
            description="Blockchain solutions tailored to your needs."
            highlight={selectedService === "blockchain"} // Highlight if selected
            onClick={() => handleServiceClick("blockchain")} // Handle click
          />
        </Link>
        <Link href="/GameDevelopment">
          <ServiceItem
            icon={<svg width="22" height="17" className="hidden md:block" viewBox="0 0 22 17" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M15.9991 0.5C16.7621 0.5 17.3931 0.934 17.8551 1.39C18.3361 1.863 18.7771 2.499 19.1691 3.2C19.9561 4.606 20.6411 6.443 21.0941 8.258C21.5441 10.059 21.7931 11.94 21.6341 13.419C21.4741 14.904 20.7091 16.5 18.9991 16.5C17.5231 16.5 16.3471 15.74 15.3851 14.969L15.0341 14.68L14.5421 14.265L14.0981 13.897C13.0791 13.072 12.1741 12.5 10.9991 12.5C9.82415 12.5 8.91915 13.072 7.90015 13.897L7.45615 14.265L6.96415 14.68L6.61415 14.969C5.65015 15.74 4.47415 16.5 2.99915 16.5C1.28815 16.5 0.523147 14.904 0.364147 13.419C0.206147 11.939 0.454147 10.059 0.904147 8.258C1.35715 6.443 2.04215 4.606 2.82915 3.199C3.22115 2.499 3.66215 1.863 4.14315 1.389C4.60515 0.934 5.23615 0.5 5.99915 0.5C6.51415 0.5 7.01715 0.623 7.51215 0.77L8.10415 0.951C8.20281 0.981667 8.30115 1.01067 8.39915 1.038C9.26415 1.286 10.1491 1.5 10.9991 1.5C11.8491 1.5 12.7341 1.286 13.5991 1.038L14.4841 0.771C14.9821 0.624 15.4891 0.5 15.9991 0.5ZM15.9991 2.5C15.6161 2.5 15.2161 2.616 14.8281 2.743L14.3701 2.894L14.1491 2.962C13.2641 3.214 12.1491 3.5 10.9991 3.5C9.84915 3.5 8.73415 3.214 7.84915 2.962L7.62915 2.894L7.17015 2.743C6.78215 2.615 6.38215 2.5 5.99915 2.5C5.58115 2.578 5.20615 3.085 4.92315 3.555L4.76515 3.83L4.57515 4.176C3.89315 5.394 3.26515 7.056 2.84515 8.743C2.45015 10.319 2.25815 11.829 2.33115 12.953L2.35715 13.246L2.37715 13.422L2.40715 13.63C2.47615 14.031 2.62515 14.5 2.99915 14.5C3.81115 14.5 4.48915 14.096 5.33215 13.426L5.73515 13.098L6.49515 12.462L6.83915 12.182C7.90315 11.339 9.23415 10.5 10.9991 10.5C12.7641 10.5 14.0951 11.34 15.1591 12.182L15.5041 12.462L16.2641 13.098L16.6661 13.426C17.5091 14.096 18.1861 14.5 18.9991 14.5C19.3391 14.5 19.4931 14.113 19.5701 13.741L19.6081 13.523L19.6451 13.206C19.7681 12.06 19.5781 10.441 19.1541 8.743C18.7681 7.197 18.2081 5.671 17.5921 4.489L17.2331 3.829L17.0751 3.556C16.7921 3.085 16.4171 2.578 15.9991 2.5ZM7.49915 4.5C8.16219 4.5 8.79807 4.76339 9.26691 5.23223C9.73575 5.70107 9.99915 6.33696 9.99915 7C9.99915 7.66304 9.73575 8.29893 9.26691 8.76777C8.79807 9.23661 8.16219 9.5 7.49915 9.5C6.83611 9.5 6.20022 9.23661 5.73138 8.76777C5.26254 8.29893 4.99915 7.66304 4.99915 7C4.99915 6.33696 5.26254 5.70107 5.73138 5.23223C6.20022 4.76339 6.83611 4.5 7.49915 4.5ZM14.4991 4.5C14.7441 4.50003 14.9805 4.58996 15.1635 4.75272C15.3466 4.91547 15.4635 5.13975 15.4921 5.383L15.4991 5.5V6H15.9991C16.254 6.00028 16.4992 6.09788 16.6845 6.27285C16.8699 6.44782 16.9814 6.68695 16.9963 6.94139C17.0113 7.19584 16.9285 7.44638 16.7649 7.64183C16.6013 7.83729 16.3692 7.9629 16.1161 7.993L15.9991 8H15.4991V8.5C15.4989 8.75488 15.4013 9.00003 15.2263 9.18537C15.0513 9.3707 14.8122 9.48223 14.5578 9.49717C14.3033 9.51211 14.0528 9.42933 13.8573 9.26574C13.6619 9.10215 13.5363 8.8701 13.5061 8.617L13.4991 8.5V8H12.9991C12.7443 7.99972 12.4991 7.90212 12.3138 7.72715C12.1284 7.55218 12.0169 7.31305 12.002 7.05861C11.987 6.80416 12.0698 6.55362 12.2334 6.35817C12.397 6.16271 12.6291 6.0371 12.8821 6.007L12.9991 6H13.4991V5.5C13.4991 5.23478 13.6045 4.98043 13.792 4.79289C13.9796 4.60536 14.2339 4.5 14.4991 4.5ZM7.49915 6.5C7.36654 6.5 7.23936 6.55268 7.14559 6.64645C7.05183 6.74021 6.99915 6.86739 6.99915 7C6.99915 7.13261 7.05183 7.25979 7.14559 7.35355C7.23936 7.44732 7.36654 7.5 7.49915 7.5C7.63176 7.5 7.75893 7.44732 7.8527 7.35355C7.94647 7.25979 7.99915 7.13261 7.99915 7C7.99915 6.86739 7.94647 6.74021 7.8527 6.64645C7.75893 6.55268 7.63176 6.5 7.49915 6.5Z" fill="#1E1E1E"/>
</svg>
}
            title="Game Development"
            description="Experiences that drive player engagement."
            highlight={selectedService === "game"} // Highlight if selected
            onClick={() => handleServiceClick("game")} // Handle click
          />
        </Link>
        <Link href="/AIServices">
          <ServiceItem
            icon={<svg width="20" height="21" className="hidden md:block"  viewBox="0 0 20 21" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M17.4004 11.5166C17.3954 12.0681 17.1036 12.616 16.5156 12.8711L16.3867 12.9199L14.0293 13.7256C13.4203 13.9335 12.8626 14.2703 12.3945 14.7119C11.9267 15.1535 11.5592 15.6904 11.3164 16.2861L11.7793 16.4746L11.3154 16.2861L11.3105 16.2998L11.2295 16.5156L11.2275 16.5225L11.2246 16.5293L10.4189 18.8906C10.1901 19.5599 9.60435 19.8953 9.01562 19.9023L9.47266 18.5674L10.2783 16.208V16.207C10.5365 15.4507 10.9564 14.7592 11.5088 14.1816C12.0601 13.6053 12.7303 13.1559 13.4727 12.8643L13.707 12.7803L16.0674 11.9727L17.4004 11.5166ZM1.93164 11.9736L4.29199 12.7793C5.04839 13.0374 5.73979 13.4573 6.31738 14.0098C6.89188 14.5593 7.33919 15.2274 7.63086 15.9668H7.63184L7.71973 16.207V16.208L8.52637 18.5674L8.98145 19.9014C8.43289 19.8959 7.88763 19.6067 7.63184 19.0244L7.57227 18.8711L6.77344 16.5303C6.56551 15.9212 6.22878 15.3636 5.78711 14.8955C5.34552 14.4276 4.80866 14.0602 4.21289 13.8174L4.02734 14.2734L4.21289 13.8164L4.19922 13.8115L3.9834 13.7305L3.97656 13.7285L3.96973 13.7256L1.60938 12.9199C0.939622 12.6911 0.602721 12.1053 0.595703 11.5166L1.93164 11.9736ZM8.98145 3.09668L8.52637 4.43262L7.71973 6.79199V6.79297C7.46157 7.54932 7.04165 8.2408 6.48926 8.81836C5.93965 9.39292 5.27181 9.84117 4.53223 10.1328L4.29199 10.2207L1.93164 11.0264L0.59668 11.4824C0.601803 10.9667 0.858714 10.4538 1.37402 10.1816L1.48633 10.1279L1.62402 10.0742L3.96973 9.27441C4.57857 9.06637 5.13564 8.72974 5.60352 8.28809C6.01282 7.9017 6.34556 7.44243 6.58496 6.93457L6.68262 6.71387L6.6875 6.7002L6.76855 6.48438L6.77051 6.47754L6.77344 6.4707L7.5791 4.10938C7.80769 3.44073 8.39296 3.10411 8.98145 3.09668ZM9.01562 3.09766C9.56707 3.10274 10.115 3.39594 10.3701 3.98438L10.3721 3.9873L10.4229 4.125L11.2246 6.4707C11.4327 7.07955 11.7693 7.63661 12.2109 8.10449C12.6525 8.57228 13.1894 8.93985 13.7852 9.18262L13.7988 9.18848L14.0166 9.26953L14.0293 9.27441L16.3896 10.0801C17.0584 10.3087 17.3938 10.8939 17.4014 11.4824L16.0664 11.0264L13.707 10.2207C12.9506 9.9626 12.2593 9.54263 11.6816 8.99023C11.1761 8.50673 10.7679 7.93173 10.4785 7.29688L10.3613 7.02148L10.2764 6.78418L9.47266 4.43262L9.01562 3.09766ZM16.999 1C17.0692 1 17.1385 1.01469 17.2021 1.04297L17.2637 1.07617C17.3404 1.12409 17.4021 1.192 17.4434 1.27246L17.4756 1.35059L17.8223 2.36426L17.9014 2.59668L18.1338 2.67676L19.1611 3.02637C19.2549 3.05821 19.3373 3.11769 19.3975 3.19629C19.4575 3.27478 19.4927 3.36917 19.499 3.46777C19.5053 3.56658 19.4823 3.66535 19.4326 3.75098C19.3851 3.83277 19.3152 3.89869 19.2314 3.94238L19.1396 3.97949L18.1348 4.32324L17.9023 4.40234L17.8232 4.63477L17.4727 5.66211C17.4408 5.75553 17.382 5.8374 17.3037 5.89746C17.2251 5.95759 17.13 5.99372 17.0312 6C16.9325 6.00627 16.8336 5.98235 16.748 5.93262C16.664 5.88371 16.5963 5.81147 16.5527 5.72461L16.5215 5.64844L16.1768 4.63574L16.0967 4.40332L15.8643 4.32324L14.8379 3.97363H14.8369C14.7432 3.94178 14.6608 3.8823 14.6006 3.80371C14.5406 3.72524 14.5054 3.63079 14.499 3.53223C14.4927 3.43343 14.5157 3.33465 14.5654 3.24902C14.6134 3.16649 14.6839 3.09935 14.7686 3.05566L14.8516 3.02148L15.8633 2.67676L16.0957 2.59766L16.1758 2.36523L16.5254 1.33887C16.5507 1.26477 16.5931 1.19792 16.6484 1.14355L16.708 1.09277C16.7715 1.04747 16.8445 1.01786 16.9209 1.00586L16.999 1Z" fill="#1E1E1E" stroke="white"/>
</svg>
}
            title="AI Services"
            description="Unlock the power of artificial intelligence"
            highlight={selectedService === "ai"} // Highlight if selected
            onClick={() => handleServiceClick("ai")} // Handle click
          />
        </Link>
      </div>
    </div>
  );
};

const ServiceItem: React.FC<{
  icon: React.ReactNode;
  title: string;
  description: string;
  highlight?: boolean;
  onClick: () => void; // Add onClick prop
}> = ({ icon, title, description, highlight = false, onClick }) => {
  return (
    <div
      className={`flex items-start gap-3 p-3 rounded-lg cursor-pointer transition-all ${
        highlight
          ? "bg-[#d946ef] text-white"
          : "hover:bg-gray-100 text-gray-800"
      }`}
      onClick={onClick} // Attach onClick handler
    >
      <div
        className={`p-2 rounded-full ${
          highlight ? "bg-white text-[#d946ef]" : "bg-purple-100 text-purple-600 hidden md:block "
        }`}
      >
        {icon}
      </div>
      <div>
        <h3 className="text-sm font-inter">{title}</h3>
        <p className="text-xs hidden md:block">{description}</p> {/* Hide in mobile view */}
      </div>
    </div>
  );
};

export default ServicesPopup;